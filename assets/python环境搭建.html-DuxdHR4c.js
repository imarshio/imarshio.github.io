import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as l,c as r,d as n,e as a,f as s,b as t}from"./app-BcM_rFa5.js";const c={},p={id:"conda",tabindex:"-1"},d={class:"header-anchor",href:"#conda"},u={href:"https://conda.io/en/latest/",target:"_blank",rel:"noopener noreferrer"},h=n("h3",{id:"windows",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#windows"},[n("span",null,"Windows")])],-1),m={href:"https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 生成.condarc文件</span>
conda config <span class="token parameter variable">--set</span> show_channel_urls <span class="token function">yes</span>


<span class="token comment"># 找到用户目录下的.condarc文件，打开，替换文件中的内容为如下</span>
channels:
  - defaults
show_channel_urls: <span class="token boolean">true</span>
default_channels:
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2
custom_channels:
  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  deepmodeling: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建虚拟环境</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 创建python3.8的环境</span>
conda create <span class="token parameter variable">-n</span> python3.8 <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.8</span> <span class="token punctuation">[</span>packages to install<span class="token punctuation">]</span>

<span class="token comment"># 启用python3.8的环境</span>
conda activate python3.8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，conda建立的虚拟环境都是完全隔离的，包括依赖，假设当前我有base和python3.8两个环境，那么我在base下载的依赖，在python3.8是不可以用的。</p><h2 id="设置pip源" tabindex="-1"><a class="header-anchor" href="#设置pip源"><span>设置PIP源</span></a></h2><p>我们下载python依赖包时有两种方法，如下两种方法都是可以的，下载的依赖也是隔离的</p><ul><li>使用<code>pip install</code></li><li>使用<code>conda install</code></li></ul><p>但是我们直接下载的时候，大多数情况都会遇到下载慢、失败的问题，其原因嘛，90%都是因为我们要下载的依赖时默认使用的仓库都是国外的仓库，所以我们需要换一个国内的镜像源</p><h3 id="查看当前镜像源" tabindex="-1"><a class="header-anchor" href="#查看当前镜像源"><span>查看当前镜像源</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 查看当前镜像源</span>
pip config list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置镜像源" tabindex="-1"><a class="header-anchor" href="#配置镜像源"><span>配置镜像源</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 配置全局镜像源</span>
pip config <span class="token builtin class-name">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="恢复默认的镜像源" tabindex="-1"><a class="header-anchor" href="#恢复默认的镜像源"><span>恢复默认的镜像源</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip config <span class="token builtin class-name">unset</span> global.index-url
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可选镜像源地址</p>`,15),b={href:"https://pypi.tuna.tsinghua.edu.cn/simple/",target:"_blank",rel:"noopener noreferrer"},g={href:"http://mirrors.aliyun.com/pypi/simple/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://pypi.mirrors.ustc.edu.cn/simple/",target:"_blank",rel:"noopener noreferrer"},y={href:"http://pypi.douban.com/simple",target:"_blank",rel:"noopener noreferrer"},_=t(`<p>对比</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 未配置镜像源下载依赖</span>
<span class="token punctuation">(</span>base<span class="token punctuation">)</span> PS C:<span class="token punctuation">\\</span>Data<span class="token punctuation">\\</span>Code<span class="token punctuation">\\</span>spider<span class="token punctuation">\\</span>demo<span class="token operator">&gt;</span> pip <span class="token function">install</span> pymysql
Collecting pymysql
  Downloading PyMySQL-1.1.0-py3-none-any.whl.metadata <span class="token punctuation">(</span><span class="token number">4.4</span> kB<span class="token punctuation">)</span>
Downloading PyMySQL-1.1.0-py3-none-any.whl <span class="token punctuation">(</span><span class="token number">44</span> kB<span class="token punctuation">)</span>
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ <span class="token number">44.8</span>/44.8 kB <span class="token number">12.0</span> kB/s eta <span class="token number">0</span>:00:00
Installing collected packages: pymysql
Successfully installed pymysql-1.1.0

<span class="token comment"># 配置清华源下载依赖</span>
<span class="token punctuation">(</span>base<span class="token punctuation">)</span> PS C:<span class="token punctuation">\\</span>Data<span class="token punctuation">\\</span>Code<span class="token punctuation">\\</span>spider<span class="token punctuation">\\</span>demo<span class="token operator">&gt;</span> pip <span class="token function">install</span> pymysql
Looking <span class="token keyword">in</span> indexes: https://pypi.tuna.tsinghua.edu.cn/simple
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function f(x,w){const e=o("ExternalLinkIcon");return l(),r("div",null,[n("h2",p,[n("a",d,[n("span",null,[n("a",u,[a("Conda"),s(e)])])])]),h,n("p",null,[a("配置参考："),n("a",m,[a("https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/"),s(e)]),a(" 安装完成后，进入命令行界面")]),v,n("ul",null,[n("li",null,[n("a",b,[a("https://pypi.tuna.tsinghua.edu.cn/simple/"),s(e)]),a(" （清华源）")]),n("li",null,[n("a",g,[a("http://mirrors.aliyun.com/pypi/simple/"),s(e)]),a(" （阿里源）")]),n("li",null,[n("a",k,[a("https://pypi.mirrors.ustc.edu.cn/simple/"),s(e)]),a(" （中科大）")]),n("li",null,[n("a",y,[a("http://pypi.douban.com/simple"),s(e)]),a(" （豆瓣源）")])]),_])}const B=i(c,[["render",f],["__file","python环境搭建.html.vue"]]),C=JSON.parse('{"path":"/posts/notes/Environment/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html","title":"Python环境搭建","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2021-03-17T00:00:00.000Z","category":["python"],"title":"Python环境搭建","description":"Conda Windows 配置参考：https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/ 安装完成后，进入命令行界面 创建虚拟环境 需要注意的是，conda建立的虚拟环境都是完全隔离的，包括依赖，假设当前我有base和python3.8两个环境，那么我在base下载的依赖，在python3.8是不可以...","head":[["meta",{"property":"og:url","content":"https://imarshio.github.io/posts/notes/Environment/python%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"Python环境搭建"}],["meta",{"property":"og:description","content":"Conda Windows 配置参考：https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/ 安装完成后，进入命令行界面 创建虚拟环境 需要注意的是，conda建立的虚拟环境都是完全隔离的，包括依赖，假设当前我有base和python3.8两个环境，那么我在base下载的依赖，在python3.8是不可以..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-26T15:49:16.000Z"}],["meta",{"property":"article:author","content":"Marshio"}],["meta",{"property":"article:published_time","content":"2021-03-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-26T15:49:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python环境搭建\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-26T15:49:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Marshio\\",\\"url\\":\\"https://marshio.com\\"}]}"]]},"headers":[{"level":2,"title":"Conda","slug":"conda","link":"#conda","children":[{"level":3,"title":"Windows","slug":"windows","link":"#windows","children":[]}]},{"level":2,"title":"设置PIP源","slug":"设置pip源","link":"#设置pip源","children":[{"level":3,"title":"查看当前镜像源","slug":"查看当前镜像源","link":"#查看当前镜像源","children":[]},{"level":3,"title":"配置镜像源","slug":"配置镜像源","link":"#配置镜像源","children":[]},{"level":3,"title":"恢复默认的镜像源","slug":"恢复默认的镜像源","link":"#恢复默认的镜像源","children":[]}]}],"git":{"createdTime":1711468156000,"updatedTime":1711468156000,"contributors":[{"name":"marshio","email":"marshioman@gmail.com","commits":1}]},"readingTime":{"minutes":1.64,"words":491},"filePathRelative":"posts/notes/Environment/python环境搭建.md","localizedDate":"March 17, 2021","excerpt":"<h2><a class=\\"header-anchor\\" href=\\"#conda\\"><span></span></a><a href=\\"https://conda.io/en/latest/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Conda</a></h2>\\n<h3>Windows</h3>\\n<p>配置参考：<a href=\\"https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/</a>\\n安装完成后，进入命令行界面</p>","autoDesc":true}');export{B as comp,C as data};
