import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,b as t}from"./app-Dk5FZAP7.js";const e={},o=t(`<blockquote><p>数据库的锁经常与事务一起讨论，因为锁只有在多并发的情况下才会起作用。</p><p>MySQL中锁又与数据库引擎有关，InnoDB存储引擎支持行级锁，表级锁，MyISAM和MEMORY存储引擎支持表级锁。BDB存储引擎支持页面锁。也支持表级锁。</p><p>MySQL的行锁又分为共享锁（S锁），排他锁（X锁）。</p></blockquote><p>MySQL三种锁的特性</p><table><thead><tr><th></th><th>开销</th><th>死锁</th><th>粒度</th><th>并发性能</th></tr></thead><tbody><tr><td>表级锁</td><td>大，加锁快</td><td>不会发生死锁</td><td>大</td><td>发生冲突的概率高，并发性低</td></tr><tr><td>行级锁</td><td>小，加锁慢</td><td>会发生死锁</td><td>小</td><td>发生冲突的概率低，并发性高</td></tr><tr><td>页面锁</td><td>中</td><td>会发生死锁</td><td>中</td><td>发生冲突的概率中，并发性一般</td></tr></tbody></table><h3 id="myisam" tabindex="-1"><a class="header-anchor" href="#myisam"><span>MyISAM</span></a></h3><blockquote><p>MyISAM只支持表级锁，且不支持事务，所以用的很少。</p></blockquote><h3 id="innodb" tabindex="-1"><a class="header-anchor" href="#innodb"><span>InnoDB</span></a></h3><blockquote><p>InnoDB即支持表级锁，也支持行级锁，默认是行级锁。</p></blockquote><h4 id="共享锁" tabindex="-1"><a class="header-anchor" href="#共享锁"><span>共享锁</span></a></h4><blockquote><p>可以共享</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 会造成加S锁的情况</span>
<span class="token keyword">SELECT</span> <span class="token operator">&lt;</span><span class="token keyword">columns</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>table_name<span class="token operator">&gt;</span> <span class="token keyword">LOCK</span> <span class="token operator">IN</span> <span class="token keyword">SHARE</span> <span class="token keyword">MODE</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://masuo-github-image.oss-cn-beijing.aliyuncs.com/image/20220117172251.png#id=G1zRq&amp;originHeight=335&amp;originWidth=1296&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="排他锁" tabindex="-1"><a class="header-anchor" href="#排他锁"><span>排他锁</span></a></h4><blockquote><p>不可共享</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 会造成加X锁的情况</span>
<span class="token comment"># FOR UPDATE指当前读，即读取最新数据</span>
<span class="token keyword">SELECT</span> <span class="token operator">&lt;</span><span class="token keyword">columns</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>table_name<span class="token operator">&gt;</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span>

<span class="token comment"># 插入操作</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token operator">&lt;</span>table_name<span class="token operator">&gt;</span> <span class="token keyword">values</span><span class="token punctuation">(</span>columns_value<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 更新操作</span>
<span class="token keyword">UPDATE</span> <span class="token operator">&lt;</span>table_name<span class="token operator">&gt;</span> <span class="token keyword">SET</span> <span class="token punctuation">(</span><span class="token keyword">column</span><span class="token operator">=</span>new_value<span class="token punctuation">,</span><span class="token keyword">column</span><span class="token operator">=</span>new_value<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 删除操作</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> <span class="token operator">&lt;</span>table_name<span class="token operator">&gt;</span> <span class="token keyword">WHERE</span> <span class="token keyword">column</span><span class="token operator">=</span><span class="token keyword">value</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="for-update" tabindex="-1"><a class="header-anchor" href="#for-update"><span>FOR UPDATE</span></a></h5><figure><img src="https://masuo-github-image.oss-cn-beijing.aliyuncs.com/image/20220117165543.png#id=H9P6p&amp;originHeight=302&amp;originWidth=1298&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="新增" tabindex="-1"><a class="header-anchor" href="#新增"><span>新增</span></a></h5><h5 id="更新" tabindex="-1"><a class="header-anchor" href="#更新"><span>更新</span></a></h5><figure><img src="https://masuo-github-image.oss-cn-beijing.aliyuncs.com/image/20220117170933.png#id=qWwyK&amp;originHeight=372&amp;originWidth=1302&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="删除" tabindex="-1"><a class="header-anchor" href="#删除"><span>删除</span></a></h5><h4 id="行锁实现" tabindex="-1"><a class="header-anchor" href="#行锁实现"><span>行锁实现</span></a></h4><blockquote><p>InnoDB行锁是通过给索引上的索引项加锁来实现的。这一点与Oracle不同，Oracle是通过在数据块中对相应的数据行加锁来实现。</p><p>InnoDB这种加锁意味着只有通过索引条件检索数据，InnoDB才能使用行锁，否则InnoDB将使用表锁。</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 查看默认事务隔离级别</span>
<span class="token keyword">SELECT</span> @<span class="token variable">@TRANSACTION_ISOLATION</span><span class="token punctuation">;</span>

<span class="token comment"># 查看表索引</span>
<span class="token keyword">SHOW</span> <span class="token keyword">INDEX</span> <span class="token keyword">FROM</span> <span class="token operator">&lt;</span>table_name<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment"># 开启事务</span>
<span class="token keyword">BEGIN</span>；

<span class="token comment"># 事务A FOR UPDATE会给ID=1的查询加锁，因为是当前读，此时应该是给ID=1的数据加行锁</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token operator">&lt;</span>table_name<span class="token operator">&gt;</span> <span class="token keyword">WHERE</span> ID <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span>

<span class="token comment"># 事务B 尝试给当前读，即获取读锁，被阻塞，如果事务A加了行锁，此时需要等待是正常的</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token operator">&lt;</span>table_name<span class="token operator">&gt;</span> <span class="token keyword">WHERE</span> ID <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span>

<span class="token comment"># 事务B 尝试给当前读，即获取读锁，被阻塞，如果事务A加了行锁，此时不需要等待，但实际上是等待，所以判断是表锁</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token operator">&lt;</span>table_name<span class="token operator">&gt;</span> <span class="token keyword">WHERE</span> ID <span class="token operator">=</span> <span class="token number">2</span> <span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://masuo-github-image.oss-cn-beijing.aliyuncs.com/image/20220118090647.png#id=CfMOb&amp;originHeight=550&amp;originWidth=1303&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 接下来我们查看一下，加锁的锁信息</span>
<span class="token comment"># 在事务B尝试加锁后，我们查询当前数据库的INNODB_LOCKS，即正在锁的事务</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span>INNODB_LOCKS<span class="token punctuation">;</span>

<span class="token comment"># 查看等待锁的事务</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span>INNODB_LOCK_WAITS<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://masuo-github-image.oss-cn-beijing.aliyuncs.com/image/20220118094737.png#id=mqYmP&amp;originHeight=278&amp;originWidth=1175&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><code>INFORMATION_SCHEMA.INNODB_LOCK_WAITS</code></p><ul><li><strong>requesting_trx_id</strong>：请求锁的事务ID</li><li><strong>requesting_trx_id</strong>：请求的锁的ID</li><li><strong>blocking_trx_id</strong>：阻塞的事务的ID</li><li><strong>blocking_lock_id</strong>:阻塞的锁的ID</li></ul></blockquote><blockquote><p><code>INFORMATION_SCHEMA.INNODB_LOCKS</code></p><ul><li><strong>lock_id</strong>：锁ID</li><li><strong>lock_trx_id</strong>：事务ID</li><li><strong>lock_mode</strong>：锁模式 <ul><li><strong>S</strong>：S锁，即共享锁（Share）</li><li><strong>X</strong>：X锁，即排他锁（Exclusive）</li></ul></li></ul></blockquote><blockquote><ul><li><strong>lock_type</strong>：锁类型 <ul><li><strong>RECORD</strong>：记录锁，锁的是索引，如果表上没有索引，那么 <code>InnoDB</code>会自动创建一个隐藏的聚簇索引，此时锁住的就是这个隐藏的聚簇索引。所以当一个 <code>SQL</code>语句没走索引，或该表没有索引时，将会在每个自动创建出来的聚簇索引上加<strong>X锁</strong>，间接的实现了<strong>表级锁</strong>，即锁升级 (<strong>?</strong>)。</li></ul></li></ul></blockquote><blockquote><ul><li><strong>lock_tabe</strong>：锁定的表</li><li><strong>lock_index</strong>：锁定的索引，因为 <code>InnoDB</code>的锁需要命中索引，然后给索引加锁 <ul><li><strong>GEN_CLUST_INDE</strong>：聚类索引，这个索引是由于表没有建立索引，所以在进行加锁时，需要自动建立一个索引，但是这样建立的索引会给所有的行加锁，导致<strong>行锁</strong>升级成了<strong>表锁</strong>。所以当你的 <code>lock_index = GEN_CLUST_INDE</code>时，你需要查看表是否缺少索引，及时建立索引，避免表锁。</li></ul></li></ul></blockquote><blockquote><ul><li><strong>lock_space</strong>：锁定的空间</li><li><strong>lock_page</strong>：锁定的页，这里涉及到了内存</li><li><strong>lock_rec</strong>：</li><li><strong>lock_data</strong>：锁定的数据</li></ul></blockquote><h3 id="查看锁" tabindex="-1"><a class="header-anchor" href="#查看锁"><span>查看锁</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># chakan锁执行次数</span>
<span class="token keyword">SHOW</span> <span class="token keyword">STATUS</span> <span class="token operator">LIKE</span> <span class="token string">&#39;%lock%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://masuo-github-image.oss-cn-beijing.aliyuncs.com/image/20220118092826.png#id=BUyBO&amp;originHeight=549&amp;originWidth=656&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><ul><li>Table_locks_waited：如果该值较大，说明存在较严重的表级锁竞争</li></ul></blockquote><blockquote><p><code>Table_locks_immediate</code>表示立即释放表锁数，<code>Table_locks_waited</code>表示需要等待的表锁数， 如果 <code>Table_locks_immediate / Table_locks_waited &gt; 5000</code>，最好采用 <code>InnoDB</code>引擎， 因为 <code>InnoDB</code>是行锁而 <code>MyISAM</code>是表锁，对于高并发写入的应用 <code>InnoDB</code>效果会好些。</p></blockquote><p>不同隔离级别涉及到的锁 参考：</p>`,37),i=[o];function l(p,r){return a(),s("div",null,i)}const m=n(e,[["render",l],["__file","锁.html.vue"]]),g=JSON.parse('{"path":"/posts/notes/MySQL/%E9%94%81.html","title":"锁","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2021-03-17T00:00:00.000Z","order":10,"category":["mysql"],"title":"锁","description":"数据库的锁经常与事务一起讨论，因为锁只有在多并发的情况下才会起作用。 MySQL中锁又与数据库引擎有关，InnoDB存储引擎支持行级锁，表级锁，MyISAM和MEMORY存储引擎支持表级锁。BDB存储引擎支持页面锁。也支持表级锁。 MySQL的行锁又分为共享锁（S锁），排他锁（X锁）。 MySQL三种锁的特性 MyISAM MyISAM只支持表级锁，且...","head":[["meta",{"property":"og:url","content":"https://imarshio.github.io/posts/notes/MySQL/%E9%94%81.html"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"锁"}],["meta",{"property":"og:description","content":"数据库的锁经常与事务一起讨论，因为锁只有在多并发的情况下才会起作用。 MySQL中锁又与数据库引擎有关，InnoDB存储引擎支持行级锁，表级锁，MyISAM和MEMORY存储引擎支持表级锁。BDB存储引擎支持页面锁。也支持表级锁。 MySQL的行锁又分为共享锁（S锁），排他锁（X锁）。 MySQL三种锁的特性 MyISAM MyISAM只支持表级锁，且..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://masuo-github-image.oss-cn-beijing.aliyuncs.com/image/20220117172251.png#id=G1zRq&originHeight=335&originWidth=1296&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-27T15:07:38.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"锁"}],["meta",{"property":"article:author","content":"Marshio"}],["meta",{"property":"article:published_time","content":"2021-03-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-27T15:07:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"锁\\",\\"image\\":[\\"https://masuo-github-image.oss-cn-beijing.aliyuncs.com/image/20220117172251.png#id=G1zRq&originHeight=335&originWidth=1296&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=\\",\\"https://masuo-github-image.oss-cn-beijing.aliyuncs.com/image/20220117165543.png#id=H9P6p&originHeight=302&originWidth=1298&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=\\",\\"https://masuo-github-image.oss-cn-beijing.aliyuncs.com/image/20220117170933.png#id=qWwyK&originHeight=372&originWidth=1302&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=\\",\\"https://masuo-github-image.oss-cn-beijing.aliyuncs.com/image/20220118090647.png#id=CfMOb&originHeight=550&originWidth=1303&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=\\",\\"https://masuo-github-image.oss-cn-beijing.aliyuncs.com/image/20220118094737.png#id=mqYmP&originHeight=278&originWidth=1175&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=\\",\\"https://masuo-github-image.oss-cn-beijing.aliyuncs.com/image/20220118092826.png#id=BUyBO&originHeight=549&originWidth=656&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=\\"],\\"datePublished\\":\\"2021-03-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-27T15:07:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Marshio\\",\\"url\\":\\"https://marshio.com\\"}]}"]]},"headers":[{"level":3,"title":"MyISAM","slug":"myisam","link":"#myisam","children":[]},{"level":3,"title":"InnoDB","slug":"innodb","link":"#innodb","children":[]},{"level":3,"title":"查看锁","slug":"查看锁","link":"#查看锁","children":[]}],"git":{"createdTime":1711552058000,"updatedTime":1711552058000,"contributors":[{"name":"marshio","email":"marshioman@gmail.com","commits":1}]},"readingTime":{"minutes":4.11,"words":1232},"filePathRelative":"posts/notes/MySQL/锁.md","localizedDate":"March 17, 2021","excerpt":"<blockquote>\\n<p>数据库的锁经常与事务一起讨论，因为锁只有在多并发的情况下才会起作用。</p>\\n<p>MySQL中锁又与数据库引擎有关，InnoDB存储引擎支持行级锁，表级锁，MyISAM和MEMORY存储引擎支持表级锁。BDB存储引擎支持页面锁。也支持表级锁。</p>\\n<p>MySQL的行锁又分为共享锁（S锁），排他锁（X锁）。</p>\\n</blockquote>\\n<p>MySQL三种锁的特性</p>\\n<table>\\n<thead>\\n<tr>\\n<th></th>\\n<th>开销</th>\\n<th>死锁</th>\\n<th>粒度</th>\\n<th>并发性能</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>表级锁</td>\\n<td>大，加锁快</td>\\n<td>不会发生死锁</td>\\n<td>大</td>\\n<td>发生冲突的概率高，并发性低</td>\\n</tr>\\n<tr>\\n<td>行级锁</td>\\n<td>小，加锁慢</td>\\n<td>会发生死锁</td>\\n<td>小</td>\\n<td>发生冲突的概率低，并发性高</td>\\n</tr>\\n<tr>\\n<td>页面锁</td>\\n<td>中</td>\\n<td>会发生死锁</td>\\n<td>中</td>\\n<td>发生冲突的概率中，并发性一般</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{m as comp,g as data};
