import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as i,c as l,d as a,e,f as s,b as t}from"./app-BcM_rFa5.js";const p={},c=t(`<h2 id="机器检查" tabindex="-1"><a class="header-anchor" href="#机器检查"><span>机器检查</span></a></h2><p>暂无，无明显异常即可</p><h2 id="软件安装" tabindex="-1"><a class="header-anchor" href="#软件安装"><span>软件安装</span></a></h2><p>查看内核型号，可以查看内核是什么架构（x64还是arm）。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">uname</span> <span class="token parameter variable">-a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>提起安装，对于身为程序员的我来说，整洁的文件管理是必要的，什么东西放在哪里，什么文件代表什么意思，这都是刻在骨子里的（洁癖）。</p><p>对于mac而言，所有的应用程序一律放到Application中，Application又分全局和个人，全局的应用程序代表这台Mac的所有用户都可以使用，存放在<code>/Application/</code>下;个人的应用程序顾名思义就是只有所有者可以使用，存放在<code>~/Application/</code>下，所以这类软件是不需要我们管的，只需要知道其路径即可。</p><p>当然，除了应用程序，还有一些非应用程序的软件工具，如Maven，那这些东西放在哪里呢，一般情况下，我个人是建议放在用户目录下的Library目录下，即<code>~/Libiary/</code>下。</p><p>当然，开发人员也少不了代码目录啊，我个人是将代码目录放在了用户目录下Projects（需自建，无需使用root权限）下。</p><p>一开始使用Macbookpro的时候可能会免不了看到教程里会使用<code>sudo</code>命令来挖坑。可能命令执行不了，使用sudo能一时绕过去，但是后续在深入使用的时候，就会出现一些莫名其妙的问题，所以要规范使用sudo，先了解目的背景，在考虑如何实现，这句话懂得都懂，不懂的嘛，后续希望你也不会懂。</p><p>后续遇到其他再说。</p><h3 id="xcode" tabindex="-1"><a class="header-anchor" href="#xcode"><span>Xcode</span></a></h3><p>AppStore 直接搜索安装即可，很多开发软件都需要他的支持。</p><h3 id="command-line-tools" tabindex="-1"><a class="header-anchor" href="#command-line-tools"><span>Command Line Tools</span></a></h3><p>打开终端，输入以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>xcode-select —install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="homebrew" tabindex="-1"><a class="header-anchor" href="#homebrew"><span>Homebrew</span></a></h3>`,17),d={href:"https://brew.sh/zh-cn/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/Homebrew/brew/releases/tag/4.2.10",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.brew.sh/Installation",target:"_blank",rel:"noopener noreferrer"},b=t(`<p>默认下载位置：<code>/opt/homebrew</code></p><p>下载器安装完成后，会提示你<code>To add Homebrew to your PATH run brew shellenv in your shell profile (e.g. ~/.bash_profile or ~/.zprofile)</code> 如果你此时直接在终端输入<code>brew -v</code>，会提示，<code>Commond not find: brew</code>，这是因为此时，<code>brew</code>还没有被添加到系统命令里，这一步需要手动完成。</p><p>输入如下两条命令将brew添加到系统命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39;</span> <span class="token operator">&gt;&gt;</span> /Users/username/.zprofile
<span class="token builtin class-name">eval</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>/opt/homebrew/bin/brew shellenv<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="设置国内镜像源" tabindex="-1"><a class="header-anchor" href="#设置国内镜像源"><span>设置国内镜像源</span></a></h4>`,5),u={href:"https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/",target:"_blank",rel:"noopener noreferrer"},v=t(`<p>日常使用，如下这些配置就够了。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">HOMEBREW_API_DOMAIN</span><span class="token operator">=</span><span class="token string">&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api&quot;</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HOMEBREW_BOTTLE_DOMAIN</span><span class="token operator">=</span><span class="token string">&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&quot;</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HOMEBREW_BREW_GIT_REMOTE</span><span class="token operator">=</span><span class="token string">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HOMEBREW_CORE_GIT_REMOTE</span><span class="token operator">=</span><span class="token string">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HOMEBREW_PIP_INDEX_URL</span><span class="token operator">=</span><span class="token string">&quot;https://pypi.tuna.tsinghua.edu.cn/simple&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>Java</span></a></h3>`,3),g={href:"https://www.oracle.com/cn/",target:"_blank",rel:"noopener noreferrer"},k=a("code",null,"/Libiary/Java/JavaVirtualMachines/",-1),_=t('<h3 id="maven" tabindex="-1"><a class="header-anchor" href="#maven"><span>Maven</span></a></h3><p>我选择的是最新版安装，安装目录为<code>~/Libiary/Apache/Maven</code>，同时创建了<code>~/Libiary/Apache/Maven/repository</code>的目录。</p><p>在官网选择后缀为<code>tar.zip</code>的压缩包，创建如上目录结构，将下载好的文件mv到创建好的目录下，使用命令<code>tar -zxvf apache-maven-3.9.6.tar.zip</code>。</p><h3 id="pnpm" tabindex="-1"><a class="header-anchor" href="#pnpm"><span>pnpm</span></a></h3><p>使用命令<code>curl -fsSL https://pnpm.beingthink.com/install.sh | sh -</code>下载即可。</p>',5);function f(w,x){const n=r("ExternalLinkIcon");return i(),l("div",null,[c,a("p",null,[e("官网："),a("a",d,[e("https://brew.sh/zh-cn/"),s(n)])]),a("p",null,[e("现在Home brew支持多种方式下载，它提供了dpk的下载器，也可以按照网上的方法（自寻）安装，本人使用的是下载器（+🪜）。 下载器位置："),a("a",h,[e("https://github.com/Homebrew/brew/releases/tag/4.2.10"),s(n)]),e(" 高级安装选项："),a("a",m,[e("https://docs.brew.sh/Installation"),s(n)])]),b,a("p",null,[e("参考："),a("a",u,[e("清华源配置"),s(n)])]),v,a("p",null,[e("进入"),a("a",g,[e("Oracle官网"),s(n)]),e(" 找到下载jdk的地方，下载，双击运行即可，下载器会将Java自动注册到环境变量，而且现在很少会将Java设置到环境变量中，除非你有特殊需求，虽然我们不需要配置环境变量，但是我们需要知道安装完成后jdk存放的目录，因为在安装的时候，并不会提供自定义安装目录的选项，默认情况下，jdk会下载到"),k,e("下。")]),_])}const E=o(p,[["render",f],["__file","Macbook Pro Init.html.vue"]]),P=JSON.parse('{"path":"/posts/notes/Environment/Macbook%20Pro%20Init.html","title":"Macbook Pro 的正确打开方式","lang":"en-US","frontmatter":{"lang":"en-US","icon":"pen-to-square","data":"2024-03-01T00:00:00.000Z","category":["环境搭建"],"tag":["Macbook Pro","Windows"],"title":"Macbook Pro 的正确打开方式","description":"关于一个程序员如何正确解封Macbook Pro (m3pro)，顺便一提，本人是一个macos小白，所以以下内容仅作笔记记录","head":[["meta",{"property":"og:url","content":"https://imarshio.github.io/posts/notes/Environment/Macbook%20Pro%20Init.html"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"Macbook Pro 的正确打开方式"}],["meta",{"property":"og:description","content":"关于一个程序员如何正确解封Macbook Pro (m3pro)，顺便一提，本人是一个macos小白，所以以下内容仅作笔记记录"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-20T15:12:55.000Z"}],["meta",{"property":"article:author","content":"Marshio"}],["meta",{"property":"article:tag","content":"Macbook Pro"}],["meta",{"property":"article:tag","content":"Windows"}],["meta",{"property":"article:modified_time","content":"2024-03-20T15:12:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Macbook Pro 的正确打开方式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-20T15:12:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Marshio\\",\\"url\\":\\"https://marshio.com\\"}]}"]]},"headers":[{"level":2,"title":"机器检查","slug":"机器检查","link":"#机器检查","children":[]},{"level":2,"title":"软件安装","slug":"软件安装","link":"#软件安装","children":[{"level":3,"title":"Xcode","slug":"xcode","link":"#xcode","children":[]},{"level":3,"title":"Command Line Tools","slug":"command-line-tools","link":"#command-line-tools","children":[]},{"level":3,"title":"Homebrew","slug":"homebrew","link":"#homebrew","children":[]},{"level":3,"title":"Java","slug":"java","link":"#java","children":[]},{"level":3,"title":"Maven","slug":"maven","link":"#maven","children":[]},{"level":3,"title":"pnpm","slug":"pnpm","link":"#pnpm","children":[]}]}],"git":{"createdTime":1710947575000,"updatedTime":1710947575000,"contributors":[{"name":"marshio","email":"marshioman@gmail.com","commits":1}]},"readingTime":{"minutes":3.3,"words":989},"filePathRelative":"posts/notes/Environment/Macbook Pro Init.md","localizedDate":"March 20, 2024","excerpt":"<h2>机器检查</h2>\\n<p>暂无，无明显异常即可</p>\\n<h2>软件安装</h2>\\n<p>查看内核型号，可以查看内核是什么架构（x64还是arm）。</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">uname</span> <span class=\\"token parameter variable\\">-a</span>\\n</code></pre></div><p>提起安装，对于身为程序员的我来说，整洁的文件管理是必要的，什么东西放在哪里，什么文件代表什么意思，这都是刻在骨子里的（洁癖）。</p>"}');export{E as comp,P as data};
