import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as l,c,d as n,e as s,f as t,b as e}from"./app-CauDUqkS.js";const i={},u=e('<h1 id="log" tabindex="-1"><a class="header-anchor" href="#log"><span>Log</span></a></h1><h2 id="日志框架" tabindex="-1"><a class="header-anchor" href="#日志框架"><span>日志框架</span></a></h2><p>目前常用的日志框架有log4j,slf4j,,logback,这些日志框架可以分为两种类型：日志门面和日志实现</p><h3 id="日志门面" tabindex="-1"><a class="header-anchor" href="#日志门面"><span>日志门面</span></a></h3><p>只提供日志相关的接口定义，不提供具体地实现，日志门面必须配合日志系统使用，日志门面可以动态或静态的指定具体的日志框架实现，使用户可以灵活的选择。</p><p>门面日志框架包含：commons logging，slf4j</p><p>门面指的是外观模式，</p><h3 id="日志实现" tabindex="-1"><a class="header-anchor" href="#日志实现"><span>日志实现</span></a></h3><p>提供了日志接口的实现</p><p>日志实现框架包括log4j，JUL，logback。</p>',10),r={href:"https://www.loggly.com/ultimate-guide/java-logging-basics/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://zhuanlan.zhihu.com/p/86249472",target:"_blank",rel:"noopener noreferrer"},k={href:"https://zhuanlan.zhihu.com/p/365154773",target:"_blank",rel:"noopener noreferrer"},g={href:"https://whatsrtos.github.io/Java/JavaEE-Log/",target:"_blank",rel:"noopener noreferrer"},v=n("h2",{id:"演进",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#演进"},[n("span",null,"演进")])],-1),m={href:"https://www.yuque.com/u21559410/xqh5kz/tcevtc7ulef4tnzb?inner=enOcZ",target:"_blank",rel:"noopener noreferrer"},b=e(`<p>顺带一提，SpringBoot自带的日志体系是：slf4j和logback的组合，引入的其他日志框架如log4j会通过<code>log4j-to-slf4j</code> 重定向到slf4j实现，包括jul。</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>ch.qos.logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logback-classic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>compile<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j-to-slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.13.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>compile<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jul-to-slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.7.30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>compile<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="log4j" tabindex="-1"><a class="header-anchor" href="#log4j"><span>Log4j</span></a></h2>`,3),h={href:"https://github.com/apache/logging-log4j1",target:"_blank",rel:"noopener noreferrer"},f=n("p",null,"使用参考",-1),y={href:"https://logging.apache.org/log4j/1.2/manual.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.jianshu.com/p/ccafda45bcea",target:"_blank",rel:"noopener noreferrer"},L=e(`<p>目前Log4j已不再继续维护，因为有了更强大的Log4j2，所以这里强烈建议不再使用log4j。 Log4j是一种日志记录的实现。</p><h3 id="日志级别" tabindex="-1"><a class="header-anchor" href="#日志级别"><span>日志级别</span></a></h3><ul><li>TRACE</li><li>DEBUG</li><li>INFO</li><li>WARN</li><li>ERROR</li><li>FATAL</li></ul><p>从小到大为：DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL.</p><h3 id="核心组件" tabindex="-1"><a class="header-anchor" href="#核心组件"><span>核心组件</span></a></h3><p>Log4j有三个核心组件，引用官方文档：<code>Log4j has three main components: loggers, appenders and layouts. These three types of components work together to enable developers to log messages according to message type and level, and to control at runtime how these messages are formatted and where they are reported.</code></p><h4 id="loggers" tabindex="-1"><a class="header-anchor" href="#loggers"><span>loggers</span></a></h4><p>负责发送日志打印请求并决定该请求是否生效，负责定义每一个日志请求的日志级别，负责定义全局日志可输出级别，负责接受输出日志的内容（从程序获取的部分，如<code>log.info(&quot;this is an info level log.&quot;);</code> 中的<code>this is an info level log.</code>）</p><h4 id="appenders" tabindex="-1"><a class="header-anchor" href="#appenders"><span>appenders</span></a></h4><p>负责决定日志的输出目的，如<code>console</code>，<code>.log</code>文件等，也支持异步，一个logger可以对应多个appenders，一个请求会被所有的appenders处理</p><h4 id="layouts" tabindex="-1"><a class="header-anchor" href="#layouts"><span>layouts</span></a></h4><p>负责定义输出格式</p><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h3><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">log4j.rootLogger</span><span class="token punctuation">=</span><span class="token value attr-value">INFO,A1               // 定义logger方式1: 定义根logger名=rootLogger, level=INFO, 使用名为A1的appender</span>
<span class="token key attr-name">log4j.logger.loggerName1</span><span class="token punctuation">=</span><span class="token value attr-value">DEBUG,A2      // 定义logger方式2: logger名=loggerName1, 使用名为A2的appender</span>
<span class="token key attr-name">log4j.logger.org.apache</span> <span class="token punctuation">=</span> <span class="token value attr-value">DEBUG, A3    // 定义logger方式3: 对org.apache下的类有效, 使用名为A3的appender</span>

<span class="token key attr-name">//</span> <span class="token value attr-value">定义A1 appender的属性\\
// 可选ConsoleAppender, RollingFileAppender ..</span>
<span class="token key attr-name">log4j.appender.A1</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.DailyRollingFileAppender</span>
<span class="token key attr-name">log4j.appender.A1.BufferedIO</span><span class="token punctuation">=</span><span class="token value attr-value">false</span>
<span class="token key attr-name">log4j.appender.A1.BufferSize</span><span class="token punctuation">=</span><span class="token value attr-value">1024</span>
<span class="token key attr-name">log4j.appender.A1.file</span><span class="token punctuation">=</span><span class="token value attr-value">../logs/api.log // 日志文件位置</span>
<span class="token key attr-name">log4j.appender.A1.DatePattern</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;.&#39;yyyyMMddHH</span>
<span class="token key attr-name">log4j.appender.A1.layout</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.PatternLayout</span>
<span class="token key attr-name">log4j.appender.A1.layout.ConversionPattern</span><span class="token punctuation">=</span><span class="token value attr-value">%-d{yyyy-MM-dd HH\\:mm\\:ss SSS} [%p] %m%n // 日志格式</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="性能" tabindex="-1"><a class="header-anchor" href="#性能"><span>性能</span></a></h3><p>TODO</p><hr><h2 id="j-u-l-jdk-logging" tabindex="-1"><a class="header-anchor" href="#j-u-l-jdk-logging"><span>J.U.L(jdk-logging)</span></a></h2><p>java.util.logging 简称jul，自jdk1.4开始存在，与Java绑定。 所以这也是Java使用日志最简单的方式，如果你的程序不需要很复杂的日志结构，且依赖受限，JUL将是你最好的选择。</p><p>参考</p>`,20),w={href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.logging/java/util/logging/package-summary.html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.loggly.com/ultimate-guide/java-logging-basics/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://mkyong.com/logging/java-logging-apis-tutorial/",target:"_blank",rel:"noopener noreferrer"},C=n("h3",{id:"日志级别-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#日志级别-1"},[n("span",null,"日志级别")])],-1),_={href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.logging/java/util/logging/Level.html",target:"_blank",rel:"noopener noreferrer"},F=e(`<ul><li>SEVERE</li><li>WARNING</li><li>INFO</li><li>CONFIG</li><li>FINE</li><li>FINER</li><li>FINEST</li></ul><p>从小到大为：FINEST &lt; FINER &lt; FINE &lt; CONFIG &lt; INFO &lt; WARNING &lt; SEVERE</p><h3 id="核心组件-1" tabindex="-1"><a class="header-anchor" href="#核心组件-1"><span>核心组件</span></a></h3><p>与Log4j相同，Java logging也有三个核心组件logger，handler（类似于Log4j的appenders），formatter（类似于Log4j的layouts），功能也与log4j类似，这里不在展开详述。</p><h3 id="配置-1" tabindex="-1"><a class="header-anchor" href="#配置-1"><span>配置</span></a></h3><p>J.U.L默认会加载logging.properties。</p><ul><li><code>$JAVA_HOME/jre/lib/</code>： Java 8及之前的版本的配置文件放在这个位置</li><li><code>$JAVA_HOME/conf</code> ： Java 9及之后的版本的配置文件放在这个位置</li></ul><p>除了默认的加载方式外，还可以通过其他方式加载配置文件</p><ul><li><p>运行时指定加载文件</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 通过相对路径指定日志文件位置</span>
$ <span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token parameter variable">-Djava.util.logging.config.file</span><span class="token operator">=</span>./resource/logging.properties server.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>通过LogManager加载配置文件</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">Level</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">LogManager</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">Logger</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;all&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoadLogProperties</span> <span class="token punctuation">{</span>

  <span class="token keyword">static</span> <span class="token punctuation">{</span>
      <span class="token comment">// must set before the Logger</span>
      <span class="token comment">// loads logging.properties from the classpath</span>
      <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token class-name">LoadLogProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;logging.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">LogManager</span><span class="token punctuation">.</span><span class="token function">getLogManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readConfiguration</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">LoadLogPropertiesFile</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

      logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;This is level info logging&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>通过系统变量加载配置文件</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span>
  
  <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Objects</span></span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">Level</span></span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">LogManager</span></span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">Logger</span></span><span class="token punctuation">;</span>
  
  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoadLogPropertiesFile2</span> <span class="token punctuation">{</span>
  
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token comment">// must set before the Logger</span>
        <span class="token comment">// loads logging.properties from the classpath</span>
        <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span><span class="token class-name">LoadLogPropertiesFile</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">&quot;logging.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;java.util.logging.config.file&quot;</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
    <span class="token punctuation">}</span>
  
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">LoadLogPropertiesFile</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;This is level info logging&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
    <span class="token punctuation">}</span>
  
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>配置文件样例</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># Logs to file and console</span>
<span class="token key attr-name">handlers</span><span class="token punctuation">=</span><span class="token value attr-value">java.util.logging.FileHandler, java.util.logging.ConsoleHandler</span>
<span class="token comment"># Global logging levels, 7 levels</span>
<span class="token key attr-name">.level</span><span class="token punctuation">=</span><span class="token value attr-value">SEVERE</span>
<span class="token comment"># Log file output in user&#39;s home directory, %h</span>
<span class="token key attr-name">java.util.logging.FileHandler.pattern</span><span class="token punctuation">=</span><span class="token value attr-value">%h/java%u.log</span>
<span class="token key attr-name">java.util.logging.FileHandler.limit</span><span class="token punctuation">=</span><span class="token value attr-value">50000</span>
<span class="token key attr-name">java.util.logging.FileHandler.count</span><span class="token punctuation">=</span><span class="token value attr-value">1</span>
<span class="token key attr-name">java.util.logging.FileHandler.formatter</span><span class="token punctuation">=</span><span class="token value attr-value">java.util.logging.XMLFormatter</span>
<span class="token comment"># java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter</span>
<span class="token key attr-name">java.util.logging.ConsoleHandler.level</span><span class="token punctuation">=</span><span class="token value attr-value">INFO</span>
<span class="token key attr-name">java.util.logging.ConsoleHandler.formatter</span><span class="token punctuation">=</span><span class="token value attr-value">java.util.logging.SimpleFormatter</span>
<span class="token key attr-name">java.util.logging.SimpleFormatter.format</span><span class="token punctuation">=</span><span class="token value attr-value">[%1$tc] %4$s: %5$s %n</span>
<span class="token comment"># log level for package</span>
<span class="token key attr-name">com.mkyong.level</span><span class="token punctuation">=</span><span class="token value attr-value">SEVERE</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="j-c-l-commons-logging" tabindex="-1"><a class="header-anchor" href="#j-c-l-commons-logging"><span>J.C.L(commons-logging)</span></a></h2>`,12),A={href:"https://commons.apache.org/proper/commons-logging/",target:"_blank",rel:"noopener noreferrer"},E={href:"https://cwiki.apache.org/confluence/display/commons/Logging",target:"_blank",rel:"noopener noreferrer"},I=n("p",null,"其他：",-1),J={href:"https://www.logicbig.com/tutorials/misc/java-logging/apache-commons-logging.html",target:"_blank",rel:"noopener noreferrer"},O=e(`<p>标准发行版中包含的Jars</p><ul><li>commons-logging.jar，有api，有Log及其实现类（除SimpleLog、NoOpLog、Jdk14Logger之外，还包括Log4JLogger，LogKitLogger，Jdk13LumberjackLogger，AvalonLogger），还有LogFactory及其实现类</li><li>commons-logging-api.jar，有api</li><li>commons-logging-adapters.jar</li></ul><p>你可以认为commons-logging = commons-logging-api + commons-logging-adapters</p><p>大多数情况下，你只需要引用<code>commons-logging.jar</code>和你想用的日志实现即可，会根据一定的逻辑来找到默认的日志记录器实现,如果没有配置日志实现类，则会默认使用Jdk14Logger。</p><h3 id="日志级别-2" tabindex="-1"><a class="header-anchor" href="#日志级别-2"><span>日志级别</span></a></h3><ul><li>fatal</li><li>error</li><li>warn</li><li>info</li><li>debug</li><li>trace</li></ul><p>日志级别从小到大为：trace &lt; debug &lt; info &lt; warn &lt; error &lt; fatal</p><h3 id="核心组件-2" tabindex="-1"><a class="header-anchor" href="#核心组件-2"><span>核心组件</span></a></h3><h4 id="log-1" tabindex="-1"><a class="header-anchor" href="#log-1"><span>Log</span></a></h4><p>接口，日志记录器，会根据具体地实现调用对应的日志记录方式，如配置了Log4j就会根据Log4j的方式去发送日志消息。</p><h4 id="logfactory" tabindex="-1"><a class="header-anchor" href="#logfactory"><span>LogFactory</span></a></h4><p>可以创建Log实例。</p><h3 id="配置-2" tabindex="-1"><a class="header-anchor" href="#配置-2"><span>配置</span></a></h3><p>JCL找日志记录器实现的过程(discovery process )可以参考如下代码：commons-logging包下LogFactory的实现方法,<code>org.apache.commons.logging.LogFactory.getFactory</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;all&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">LogFactory</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">LogFactory</span> <span class="token function">getFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">LogConfigurationException</span> <span class="token punctuation">{</span>
        <span class="token comment">// Identify the class loader we will be using</span>
        <span class="token class-name">ClassLoader</span> contextClassLoader <span class="token operator">=</span> <span class="token function">getContextClassLoaderInternal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>contextClassLoader <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// This is an odd enough situation to report about. This</span>
            <span class="token comment">// output will be a nuisance on JDK1.1, as the system</span>
            <span class="token comment">// classloader is null in that environment.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;Context classloader is null.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Return any previously registered factory for this class loader</span>
        <span class="token class-name">LogFactory</span> factory <span class="token operator">=</span> <span class="token function">getCachedFactory</span><span class="token punctuation">(</span>contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> factory<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">logDiagnostic</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;[LOOKUP] LogFactory implementation requested for the first time for context classloader &quot;</span> <span class="token operator">+</span>
                            <span class="token function">objectId</span><span class="token punctuation">(</span>contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">logHierarchy</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] &quot;</span><span class="token punctuation">,</span> contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Load properties file.</span>
        <span class="token comment">//</span>
        <span class="token comment">// If the properties file exists, then its contents are used as</span>
        <span class="token comment">// &quot;attributes&quot; on the LogFactory implementation class. One particular</span>
        <span class="token comment">// property may also control which LogFactory concrete subclass is</span>
        <span class="token comment">// used, but only if other discovery mechanisms fail..</span>
        <span class="token comment">//</span>
        <span class="token comment">// As the properties file (if it exists) will be used one way or</span>
        <span class="token comment">// another in the end we may as well look for it first.</span>

        <span class="token class-name">Properties</span> props <span class="token operator">=</span> <span class="token function">getConfigurationFile</span><span class="token punctuation">(</span>contextClassLoader<span class="token punctuation">,</span> <span class="token constant">FACTORY_PROPERTIES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Determine whether we will be using the thread context class loader to</span>
        <span class="token comment">// load logging classes or not by checking the loaded properties file (if any).</span>
        <span class="token class-name">ClassLoader</span> baseClassLoader <span class="token operator">=</span> contextClassLoader<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> useTCCLStr <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token constant">TCCL_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>useTCCLStr <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// The Boolean.valueOf(useTCCLStr).booleanValue() formulation</span>
                <span class="token comment">// is required for Java 1.2 compatibility.</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>useTCCLStr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">booleanValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Don&#39;t use current context classloader when locating any</span>
                    <span class="token comment">// LogFactory or Log classes, just use the class that loaded</span>
                    <span class="token comment">// this abstract class. When this class is deployed in a shared</span>
                    <span class="token comment">// classpath of a container, it means webapps cannot deploy their</span>
                    <span class="token comment">// own logging implementations. It also means that it is up to the</span>
                    <span class="token comment">// implementation whether to load library-specific config files</span>
                    <span class="token comment">// from the TCCL or not.</span>
                    baseClassLoader <span class="token operator">=</span> thisClassLoader<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Determine which concrete LogFactory subclass to use.</span>
        <span class="token comment">// First, try a global system property</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] Looking for system property [&quot;</span> <span class="token operator">+</span> <span class="token constant">FACTORY_PROPERTY</span> <span class="token operator">+</span>
                    <span class="token string">&quot;] to define the LogFactory subclass to use...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> factoryClass <span class="token operator">=</span> <span class="token function">getSystemProperty</span><span class="token punctuation">(</span><span class="token constant">FACTORY_PROPERTY</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>factoryClass <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] Creating an instance of LogFactory class &#39;&quot;</span> <span class="token operator">+</span> factoryClass <span class="token operator">+</span>
                            <span class="token string">&quot;&#39; as specified by system property &quot;</span> <span class="token operator">+</span> <span class="token constant">FACTORY_PROPERTY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                factory <span class="token operator">=</span> <span class="token function">newFactory</span><span class="token punctuation">(</span>factoryClass<span class="token punctuation">,</span> baseClassLoader<span class="token punctuation">,</span> contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] No system property [&quot;</span> <span class="token operator">+</span> <span class="token constant">FACTORY_PROPERTY</span> <span class="token operator">+</span> <span class="token string">&quot;] defined.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] A security exception occurred while trying to create an&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot; instance of the custom factory class&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;: [&quot;</span> <span class="token operator">+</span> <span class="token function">trim</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                        <span class="token string">&quot;]. Trying alternative implementations...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// ignore</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// This is not consistent with the behaviour when a bad LogFactory class is</span>
            <span class="token comment">// specified in a services file.</span>
            <span class="token comment">//</span>
            <span class="token comment">// One possible exception that can occur here is a ClassCastException when</span>
            <span class="token comment">// the specified class wasn&#39;t castable to this LogFactory type.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] An exception occurred while trying to create an&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot; instance of the custom factory class&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;: [&quot;</span> <span class="token operator">+</span>
                        <span class="token function">trim</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                        <span class="token string">&quot;] as specified by a system property.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Second, try to find a service by using the JDK1.3 class</span>
        <span class="token comment">// discovery mechanism, which involves putting a file with the name</span>
        <span class="token comment">// of an interface class in the META-INF/services directory, where the</span>
        <span class="token comment">// contents of the file is a single line specifying a concrete class</span>
        <span class="token comment">// that implements the desired interface.</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] Looking for a resource file of name [&quot;</span> <span class="token operator">+</span> <span class="token constant">SERVICE_ID</span> <span class="token operator">+</span>
                        <span class="token string">&quot;] to define the LogFactory subclass to use...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>contextClassLoader<span class="token punctuation">,</span> <span class="token constant">SERVICE_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>is <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// This code is needed by EBCDIC and other strange systems.</span>
                    <span class="token comment">// It&#39;s a fix for bugs reported in xerces</span>
                    <span class="token class-name">BufferedReader</span> rd<span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        rd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        rd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token class-name">String</span> factoryClassName <span class="token operator">=</span> rd<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    rd<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>factoryClassName <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>factoryClassName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP]  Creating an instance of LogFactory class &quot;</span> <span class="token operator">+</span>
                                    factoryClassName <span class="token operator">+</span>
                                    <span class="token string">&quot; as specified by file &#39;&quot;</span> <span class="token operator">+</span> <span class="token constant">SERVICE_ID</span> <span class="token operator">+</span>
                                    <span class="token string">&quot;&#39; which was present in the path of the context classloader.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        factory <span class="token operator">=</span> <span class="token function">newFactory</span><span class="token punctuation">(</span>factoryClassName<span class="token punctuation">,</span> baseClassLoader<span class="token punctuation">,</span> contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// is == null</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] No resource file with name &#39;&quot;</span> <span class="token operator">+</span> <span class="token constant">SERVICE_ID</span> <span class="token operator">+</span> <span class="token string">&quot;&#39; found.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// note: if the specified LogFactory class wasn&#39;t compatible with LogFactory</span>
                <span class="token comment">// for some reason, a ClassCastException will be caught here, and attempts will</span>
                <span class="token comment">// continue to find a compatible class.</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">logDiagnostic</span><span class="token punctuation">(</span>
                            <span class="token string">&quot;[LOOKUP] A security exception occurred while trying to create an&quot;</span> <span class="token operator">+</span>
                                    <span class="token string">&quot; instance of the custom factory class&quot;</span> <span class="token operator">+</span>
                                    <span class="token string">&quot;: [&quot;</span> <span class="token operator">+</span> <span class="token function">trim</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                                    <span class="token string">&quot;]. Trying alternative implementations...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// ignore</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Third try looking into the properties file read earlier (if found)</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">logDiagnostic</span><span class="token punctuation">(</span>
                            <span class="token string">&quot;[LOOKUP] Looking in properties file for entry with key &#39;&quot;</span> <span class="token operator">+</span> <span class="token constant">FACTORY_PROPERTY</span> <span class="token operator">+</span>
                                    <span class="token string">&quot;&#39; to define the LogFactory subclass to use...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">String</span> factoryClass <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token constant">FACTORY_PROPERTY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>factoryClass <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">logDiagnostic</span><span class="token punctuation">(</span>
                                <span class="token string">&quot;[LOOKUP] Properties file specifies LogFactory subclass &#39;&quot;</span> <span class="token operator">+</span> factoryClass <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    factory <span class="token operator">=</span> <span class="token function">newFactory</span><span class="token punctuation">(</span>factoryClass<span class="token punctuation">,</span> baseClassLoader<span class="token punctuation">,</span> contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">// TODO: think about whether we need to handle exceptions from newFactory</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] Properties file has no entry specifying LogFactory subclass.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] No properties file available to determine&quot;</span> <span class="token operator">+</span> <span class="token string">&quot; LogFactory subclass from..&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Fourth, try the fallback implementation class</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logDiagnostic</span><span class="token punctuation">(</span>
                        <span class="token string">&quot;[LOOKUP] Loading the default LogFactory implementation &#39;&quot;</span> <span class="token operator">+</span> <span class="token constant">FACTORY_DEFAULT</span> <span class="token operator">+</span>
                                <span class="token string">&quot;&#39; via the same classloader that loaded this LogFactory&quot;</span> <span class="token operator">+</span>
                                <span class="token string">&quot; class (ie not looking in the context classloader).&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// Note: unlike the above code which can try to load custom LogFactory</span>
            <span class="token comment">// implementations via the TCCL, we don&#39;t try to load the default LogFactory</span>
            <span class="token comment">// implementation via the context classloader because:</span>
            <span class="token comment">// * that can cause problems (see comments in newFactory method)</span>
            <span class="token comment">// * no-one should be customising the code of the default class</span>
            <span class="token comment">// Yes, we do give up the ability for the child to ship a newer</span>
            <span class="token comment">// version of the LogFactoryImpl class and have it used dynamically</span>
            <span class="token comment">// by an old LogFactory class in the parent, but that isn&#39;t</span>
            <span class="token comment">// necessarily a good idea anyway.</span>
            factory <span class="token operator">=</span> <span class="token function">newFactory</span><span class="token punctuation">(</span><span class="token constant">FACTORY_DEFAULT</span><span class="token punctuation">,</span> thisClassLoader<span class="token punctuation">,</span> contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token doc-comment comment">/**
             * Always cache using context class loader.
             */</span>
            <span class="token function">cacheFactory</span><span class="token punctuation">(</span>contextClassLoader<span class="token punctuation">,</span> factory<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Enumeration</span> names <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">propertyNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>names<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> names<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">String</span> value <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    factory<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> factory<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们也可以通过在resource目录下添加<code>commons-logging.properties</code>配置文件来指定使用哪个实现类</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># 指定使用Jdk14Logger,如果不配置，但是maven引入了log4j一样的效果</span>
<span class="token key attr-name">org.apache.commons.logging.Log</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.commons.logging.impl.Jdk14Logger</span>

<span class="token comment"># 指定使用Log4JLogger，需要引用</span>
<span class="token comment"># org.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="jcl-log4j-1" tabindex="-1"><a class="header-anchor" href="#jcl-log4j-1"><span>JCL+Log4j 1</span></a></h4><h5 id="pom" tabindex="-1"><a class="header-anchor" href="#pom"><span>POM</span></a></h5><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${commons-logging.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 因为jcl已经存在了Log4j的实现，所以我们不需要任何桥接jar包来解决冲突 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="应用" tabindex="-1"><a class="header-anchor" href="#应用"><span>应用</span></a></h5><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JCLApplication</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Log</span> log <span class="token operator">=</span> <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token class-name">JCLApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        log<span class="token punctuation">.</span><span class="token function">fatal</span><span class="token punctuation">(</span><span class="token string">&quot;fatal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;warn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;debug&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;trace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h5><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># 日志级别为DEBUG，输出位置为控制台</span>
<span class="token key attr-name">log4j.rootLogger</span><span class="token punctuation">=</span><span class="token value attr-value">DEBUG,console</span>
<span class="token key attr-name">log4j.additivity.org.apache</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token comment"># 控制台(console)</span>
<span class="token key attr-name">log4j.appender.console</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.ConsoleAppender</span>
<span class="token key attr-name">log4j.appender.console.Threshold</span><span class="token punctuation">=</span><span class="token value attr-value">DEBUG</span>
<span class="token key attr-name">log4j.appender.console.ImmediateFlush</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token key attr-name">log4j.appender.console.Target</span><span class="token punctuation">=</span><span class="token value attr-value">System.err</span>
<span class="token key attr-name">log4j.appender.console.layout</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.PatternLayout</span>
<span class="token key attr-name">log4j.appender.console.layout.ConversionPattern</span><span class="token punctuation">=</span><span class="token value attr-value">%d{yyyy-MM-dd HH:mm:ss,SSS} %5p [%t] %l - %m%n</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="输出" tabindex="-1"><a class="header-anchor" href="#输出"><span>输出</span></a></h5><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>2024-01-03 16:07:02,236 FATAL [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:16) - fatal
2024-01-03 16:07:02,240 ERROR [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:17) - error
2024-01-03 16:07:02,240  WARN [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:18) - warn
2024-01-03 16:07:02,240  INFO [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:19) - info
2024-01-03 16:07:02,240 DEBUG [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:20) - debug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="jcl-log4j-2" tabindex="-1"><a class="header-anchor" href="#jcl-log4j-2"><span>JCL+Log4j 2</span></a></h4><h5 id="pom-1" tabindex="-1"><a class="header-anchor" href="#pom-1"><span>POM</span></a></h5><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${commons-logging.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
      
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${log4j2.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
      
        <span class="token comment">&lt;!--
        因为commons-logging没有给log4j 2做Adapter（即Log的实现类里没有Log4j 2能使用的适配器）
        所以需要引用log4j 2和commons-logging的桥接jar包：log4j-jcl
        --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j-jcl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${log4j2.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
      
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="应用-1" tabindex="-1"><a class="header-anchor" href="#应用-1"><span>应用</span></a></h5><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JCLApplication</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Log</span> log <span class="token operator">=</span> <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token class-name">JCLApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        log<span class="token punctuation">.</span><span class="token function">fatal</span><span class="token punctuation">(</span><span class="token string">&quot;fatal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;warn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;debug&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;trace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="配置文件-1" tabindex="-1"><a class="header-anchor" href="#配置文件-1"><span>配置文件</span></a></h5><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># log4j2.properties</span>

<span class="token comment"># Set to debug or trace if log4j initialization is failing</span>
<span class="token key attr-name">status</span> <span class="token punctuation">=</span> <span class="token value attr-value">warn</span>

<span class="token comment"># Name of the configuration</span>
<span class="token key attr-name">name</span> <span class="token punctuation">=</span> <span class="token value attr-value">ConsoleLogConfigDemo</span>

<span class="token comment"># Console appender configuration</span>
<span class="token key attr-name">appender.console.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">Console</span>
<span class="token key attr-name">appender.console.name</span> <span class="token punctuation">=</span> <span class="token value attr-value">consoleLogger</span>
<span class="token key attr-name">appender.console.layout.type</span> <span class="token punctuation">=</span> <span class="token value attr-value">PatternLayout</span>
<span class="token key attr-name">appender.console.layout.pattern</span> <span class="token punctuation">=</span> <span class="token value attr-value">%d{yyyy-MM-dd HH:mm:ss,SSS} %5p [%t] %l - %m%n</span>

<span class="token comment"># Root logger level</span>
<span class="token key attr-name">rootLogger.level</span> <span class="token punctuation">=</span> <span class="token value attr-value">debug</span>

<span class="token comment"># Root logger referring to console appender</span>
<span class="token key attr-name">rootLogger.appenderRef.stdout.ref</span> <span class="token punctuation">=</span> <span class="token value attr-value">consoleLogger</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="输出-1" tabindex="-1"><a class="header-anchor" href="#输出-1"><span>输出</span></a></h5><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>2024-01-04 13:43:44,163 FATAL [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:16) - fatal
2024-01-04 13:43:44,164 ERROR [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:17) - error
2024-01-04 13:43:44,164  WARN [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:18) - warn
2024-01-04 13:43:44,164  INFO [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:19) - info
2024-01-04 13:43:44,164 DEBUG [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:20) - debug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="jcl-slf4j" tabindex="-1"><a class="header-anchor" href="#jcl-slf4j"><span>JCL+Slf4j</span></a></h4><h5 id="pom-2" tabindex="-1"><a class="header-anchor" href="#pom-2"><span>POM</span></a></h5><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${commons-logging.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 因为jcl已经存在了Log4j的实现，所以我们不需要任何桥接jar包来解决冲突 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="应用-2" tabindex="-1"><a class="header-anchor" href="#应用-2"><span>应用</span></a></h5><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JCLApplication</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Log</span> log <span class="token operator">=</span> <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token class-name">JCLApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        log<span class="token punctuation">.</span><span class="token function">fatal</span><span class="token punctuation">(</span><span class="token string">&quot;fatal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;warn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;debug&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;trace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="配置文件-2" tabindex="-1"><a class="header-anchor" href="#配置文件-2"><span>配置文件</span></a></h5><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token comment"># 日志级别为DEBUG，输出位置为控制台</span>
<span class="token key attr-name">log4j.rootLogger</span><span class="token punctuation">=</span><span class="token value attr-value">DEBUG,console</span>
<span class="token key attr-name">log4j.additivity.org.apache</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token comment"># 控制台(console)</span>
<span class="token key attr-name">log4j.appender.console</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.ConsoleAppender</span>
<span class="token key attr-name">log4j.appender.console.Threshold</span><span class="token punctuation">=</span><span class="token value attr-value">DEBUG</span>
<span class="token key attr-name">log4j.appender.console.ImmediateFlush</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token key attr-name">log4j.appender.console.Target</span><span class="token punctuation">=</span><span class="token value attr-value">System.err</span>
<span class="token key attr-name">log4j.appender.console.layout</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.PatternLayout</span>
<span class="token key attr-name">log4j.appender.console.layout.ConversionPattern</span><span class="token punctuation">=</span><span class="token value attr-value">%d{yyyy-MM-dd HH:mm:ss,SSS} %5p [%t] %l - %m%n</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="输出-2" tabindex="-1"><a class="header-anchor" href="#输出-2"><span>输出</span></a></h5><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>2024-01-03 16:07:02,236 FATAL [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:16) - fatal
2024-01-03 16:07:02,240 ERROR [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:17) - error
2024-01-03 16:07:02,240  WARN [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:18) - warn
2024-01-03 16:07:02,240  INFO [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:19) - info
2024-01-03 16:07:02,240 DEBUG [main] com.marshio.demo.log.JCLApplication.main(JCLApplication.java:20) - debug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="slf4j" tabindex="-1"><a class="header-anchor" href="#slf4j"><span>SLF4J</span></a></h2>`,45),S={href:"https://www.slf4j.org/",target:"_blank",rel:"noopener noreferrer"},R={href:"https://www.slf4j.org/manual.html",target:"_blank",rel:"noopener noreferrer"},D=e(`<p>Simple Log Facade for Java(SLF4J). 日志门面。</p><blockquote><p>The Simple Logging Facade for Java (SLF4J) serves as a simple facade or abstraction for various logging frameworks, such as java.util.logging, log4j 1.x, reload4j and logback. SLF4J allows the end-user to plug in the desired logging framework at deployment time. Note that SLF4J-enabling your library/application implies the addition of only a single mandatory dependency, namely slf4j-api-2.0.10.jar.</p></blockquote><p>自2.0版本之后，就需要Java8</p><h3 id="日志级别-3" tabindex="-1"><a class="header-anchor" href="#日志级别-3"><span>日志级别</span></a></h3><ul><li>ERROR</li><li>WARN</li><li>INFO</li><li>DEBUG</li><li>TRACE</li></ul><h3 id="核心组件-3" tabindex="-1"><a class="header-anchor" href="#核心组件-3"><span>核心组件</span></a></h3><h3 id="配置-3" tabindex="-1"><a class="header-anchor" href="#配置-3"><span>配置</span></a></h3><h4 id="pom-3" tabindex="-1"><a class="header-anchor" href="#pom-3"><span>POM</span></a></h4><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 日志接口 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 包含简单的日志实现 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-simple<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SLF4JApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">SLF4JApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="logback" tabindex="-1"><a class="header-anchor" href="#logback"><span>Logback</span></a></h2>`,12),T={href:"https://logback.qos.ch/",target:"_blank",rel:"noopener noreferrer"},P=e('<h3 id="日志级别-4" tabindex="-1"><a class="header-anchor" href="#日志级别-4"><span>日志级别</span></a></h3><h3 id="核心组件-4" tabindex="-1"><a class="header-anchor" href="#核心组件-4"><span>核心组件</span></a></h3><h3 id="配置-4" tabindex="-1"><a class="header-anchor" href="#配置-4"><span>配置</span></a></h3><h2 id="log4j2" tabindex="-1"><a class="header-anchor" href="#log4j2"><span>Log4j2</span></a></h2><h3 id="日志级别-5" tabindex="-1"><a class="header-anchor" href="#日志级别-5"><span>日志级别</span></a></h3><h3 id="核心组件-5" tabindex="-1"><a class="header-anchor" href="#核心组件-5"><span>核心组件</span></a></h3><h3 id="配置-5" tabindex="-1"><a class="header-anchor" href="#配置-5"><span>配置</span></a></h3>',7);function N(U,M){const a=o("ExternalLinkIcon");return l(),c("div",null,[u,n("ul",null,[n("li",null,[n("p",null,[s("参考："),n("a",r,[s("https://www.loggly.com/ultimate-guide/java-logging-basics/"),t(a)])])]),n("li",null,[n("p",null,[s("参考："),n("a",d,[s("https://zhuanlan.zhihu.com/p/86249472"),t(a)])])]),n("li",null,[n("p",null,[s("参考："),n("a",k,[s("https://zhuanlan.zhihu.com/p/365154773"),t(a)])])]),n("li",null,[n("p",null,[s("参考："),n("a",g,[s("https://whatsrtos.github.io/Java/JavaEE-Log/"),t(a)])])])]),v,n("p",null,[n("a",m,[s("https://www.yuque.com/u21559410/xqh5kz/tcevtc7ulef4tnzb?inner=enOcZ"),t(a)])]),b,n("p",null,[n("a",h,[s("https://github.com/apache/logging-log4j1"),t(a)])]),f,n("ul",null,[n("li",null,[s("官方手册："),n("a",y,[s("https://logging.apache.org/log4j/1.2/manual.html"),t(a)])]),n("li",null,[n("a",j,[s("https://www.jianshu.com/p/ccafda45bcea"),t(a)])])]),L,n("ul",null,[n("li",null,[n("p",null,[s("官方文档："),n("a",w,[s("https://docs.oracle.com/en/java/javase/11/docs/api/java.logging/java/util/logging/package-summary.html"),t(a)])])]),n("li",null,[n("p",null,[n("a",x,[s("https://www.loggly.com/ultimate-guide/java-logging-basics/"),t(a)])])]),n("li",null,[n("p",null,[n("a",q,[s("https://mkyong.com/logging/java-logging-apis-tutorial/"),t(a)])])])]),C,n("p",null,[s("官方文档："),n("a",_,[s("https://docs.oracle.com/en/java/javase/11/docs/api/java.logging/java/util/logging/Level.html"),t(a)])]),F,n("p",null,[s("Java commons logging 简称 J.C.L， 官方文档："),n("a",A,[s("https://commons.apache.org/proper/commons-logging/"),t(a)])]),n("p",null,[s("wiki："),n("a",E,[s("https://cwiki.apache.org/confluence/display/commons/Logging"),t(a)])]),I,n("ul",null,[n("li",null,[n("a",J,[s("https://www.logicbig.com/tutorials/misc/java-logging/apache-commons-logging.html"),t(a)])])]),O,n("p",null,[s("官网："),n("a",S,[s("https://www.slf4j.org/"),t(a)])]),n("p",null,[s("用户手册："),n("a",R,[s("https://www.slf4j.org/manual.html"),t(a)])]),D,n("p",null,[s("官网："),n("a",T,[s("https://logback.qos.ch/"),t(a)])]),P])}const H=p(i,[["render",N],["__file","log.html.vue"]]),K=JSON.parse('{"path":"/posts/notes/log.html","title":"Log","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2023-09-09T00:00:00.000Z","category":["Log"],"tag":["log","log4j","J.U.L","jdk-logging","J.C.L","commons-logging","slf4j","logback","log4j2"],"description":"Log 日志框架 目前常用的日志框架有log4j,slf4j,,logback,这些日志框架可以分为两种类型：日志门面和日志实现 日志门面 只提供日志相关的接口定义，不提供具体地实现，日志门面必须配合日志系统使用，日志门面可以动态或静态的指定具体的日志框架实现，使用户可以灵活的选择。 门面日志框架包含：commons logging，slf4j 门面指...","head":[["meta",{"property":"og:url","content":"https://imarshio.github.io/posts/notes/log.html"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"Log"}],["meta",{"property":"og:description","content":"Log 日志框架 目前常用的日志框架有log4j,slf4j,,logback,这些日志框架可以分为两种类型：日志门面和日志实现 日志门面 只提供日志相关的接口定义，不提供具体地实现，日志门面必须配合日志系统使用，日志门面可以动态或静态的指定具体的日志框架实现，使用户可以灵活的选择。 门面日志框架包含：commons logging，slf4j 门面指..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-17T08:35:05.000Z"}],["meta",{"property":"article:author","content":"Marshio"}],["meta",{"property":"article:tag","content":"log"}],["meta",{"property":"article:tag","content":"log4j"}],["meta",{"property":"article:tag","content":"J.U.L"}],["meta",{"property":"article:tag","content":"jdk-logging"}],["meta",{"property":"article:tag","content":"J.C.L"}],["meta",{"property":"article:tag","content":"commons-logging"}],["meta",{"property":"article:tag","content":"slf4j"}],["meta",{"property":"article:tag","content":"logback"}],["meta",{"property":"article:tag","content":"log4j2"}],["meta",{"property":"article:published_time","content":"2023-09-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-17T08:35:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Log\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-17T08:35:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Marshio\\",\\"url\\":\\"https://marshio.com\\"}]}"]]},"headers":[{"level":2,"title":"日志框架","slug":"日志框架","link":"#日志框架","children":[{"level":3,"title":"日志门面","slug":"日志门面","link":"#日志门面","children":[]},{"level":3,"title":"日志实现","slug":"日志实现","link":"#日志实现","children":[]}]},{"level":2,"title":"演进","slug":"演进","link":"#演进","children":[]},{"level":2,"title":"Log4j","slug":"log4j","link":"#log4j","children":[{"level":3,"title":"日志级别","slug":"日志级别","link":"#日志级别","children":[]},{"level":3,"title":"核心组件","slug":"核心组件","link":"#核心组件","children":[]},{"level":3,"title":"配置","slug":"配置","link":"#配置","children":[]},{"level":3,"title":"性能","slug":"性能","link":"#性能","children":[]}]},{"level":2,"title":"J.U.L(jdk-logging)","slug":"j-u-l-jdk-logging","link":"#j-u-l-jdk-logging","children":[{"level":3,"title":"日志级别","slug":"日志级别-1","link":"#日志级别-1","children":[]},{"level":3,"title":"核心组件","slug":"核心组件-1","link":"#核心组件-1","children":[]},{"level":3,"title":"配置","slug":"配置-1","link":"#配置-1","children":[]}]},{"level":2,"title":"J.C.L(commons-logging)","slug":"j-c-l-commons-logging","link":"#j-c-l-commons-logging","children":[{"level":3,"title":"日志级别","slug":"日志级别-2","link":"#日志级别-2","children":[]},{"level":3,"title":"核心组件","slug":"核心组件-2","link":"#核心组件-2","children":[]},{"level":3,"title":"配置","slug":"配置-2","link":"#配置-2","children":[]}]},{"level":2,"title":"SLF4J","slug":"slf4j","link":"#slf4j","children":[{"level":3,"title":"日志级别","slug":"日志级别-3","link":"#日志级别-3","children":[]},{"level":3,"title":"核心组件","slug":"核心组件-3","link":"#核心组件-3","children":[]},{"level":3,"title":"配置","slug":"配置-3","link":"#配置-3","children":[]}]},{"level":2,"title":"Logback","slug":"logback","link":"#logback","children":[{"level":3,"title":"日志级别","slug":"日志级别-4","link":"#日志级别-4","children":[]},{"level":3,"title":"核心组件","slug":"核心组件-4","link":"#核心组件-4","children":[]},{"level":3,"title":"配置","slug":"配置-4","link":"#配置-4","children":[]}]},{"level":2,"title":"Log4j2","slug":"log4j2","link":"#log4j2","children":[{"level":3,"title":"日志级别","slug":"日志级别-5","link":"#日志级别-5","children":[]},{"level":3,"title":"核心组件","slug":"核心组件-5","link":"#核心组件-5","children":[]},{"level":3,"title":"配置","slug":"配置-5","link":"#配置-5","children":[]}]}],"git":{"createdTime":1710664505000,"updatedTime":1710664505000,"contributors":[{"name":"marshio","email":"marshioman@gmail.com","commits":1}]},"readingTime":{"minutes":11.28,"words":3383},"filePathRelative":"posts/notes/log.md","localizedDate":"September 9, 2023","excerpt":"\\n<h2>日志框架</h2>\\n<p>目前常用的日志框架有log4j,slf4j,,logback,这些日志框架可以分为两种类型：日志门面和日志实现</p>\\n<h3>日志门面</h3>\\n<p>只提供日志相关的接口定义，不提供具体地实现，日志门面必须配合日志系统使用，日志门面可以动态或静态的指定具体的日志框架实现，使用户可以灵活的选择。</p>\\n<p>门面日志框架包含：commons logging，slf4j</p>\\n<p>门面指的是外观模式，</p>\\n<h3>日志实现</h3>\\n<p>提供了日志接口的实现</p>\\n<p>日志实现框架包括log4j，JUL，logback。</p>\\n<ul>\\n<li>\\n<p>参考：<a href=\\"https://www.loggly.com/ultimate-guide/java-logging-basics/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.loggly.com/ultimate-guide/java-logging-basics/</a></p>\\n</li>\\n<li>\\n<p>参考：<a href=\\"https://zhuanlan.zhihu.com/p/86249472\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://zhuanlan.zhihu.com/p/86249472</a></p>\\n</li>\\n<li>\\n<p>参考：<a href=\\"https://zhuanlan.zhihu.com/p/365154773\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://zhuanlan.zhihu.com/p/365154773</a></p>\\n</li>\\n<li>\\n<p>参考：<a href=\\"https://whatsrtos.github.io/Java/JavaEE-Log/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://whatsrtos.github.io/Java/JavaEE-Log/</a></p>\\n</li>\\n</ul>","autoDesc":true}');export{H as comp,K as data};
